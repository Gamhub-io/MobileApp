name: Android Publish

on:
  workflow_call:
    inputs:
      dotnet-version:
        required: true
        type: string
      dotnet-version-target:
        required: true
        type: string
      project-file:
        required: true
        type: string
      project-folder:
        required: true
        type: string
      build-config:
        required: true
        type: string
      build-version:
        required: true
        type: string
      deploy-type:
        required: true
        type: string
      package-name:
        required: true
        type: string
      generation:
        required: true
        type: string
    secrets:
      keystore-password:
        required: true
      keystore-alias:
        required: true
      keystore:
        required: true
      playstore-service-account:
        required: true
      discord_client_id:
        required: true
      api_host:
        required: true
      monitoring_key:
        required: true
      google_services_json:
        required: true
      revenueCatApiKey_Android:
        required: true
      sha_salt:
        required: true
jobs:
  publish-android:
    runs-on: macos-latest
    name: Android Publish
    steps:
      - name: Current dir
        run: pwd

      - name: Setup .NET ${{ inputs.dotnet-version }}
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ inputs.dotnet-version }}
      - uses: actions/checkout@v3
        name: Checkout the code

      - name: Generate Google Services file
        env:
          DATA: ${{ secrets.google_services_json }}
        run: |
          touch ./App/Platforms/Android/Resources/google-services.json | base64
          echo $DATA > ./App/Platforms/Android/Resources/google-services.json
        shell: bash

      # Build Environement variables
      - name: Environement variables
        run: |
          chmod +x ./App/builds/android_prebuild.sh
          ./App/builds/android_prebuild.sh
        shell: bash
        env:
          discord_client_id: ${{ secrets.discord_client_id }}
          api_host: ${{ secrets.api_host }}
          monitoring_key: ${{ secrets.monitoring_key }}
          sha_salt: ${{ secrets.sha_salt }}
          revenueCatApiKey_Android: ${{ secrets.revenueCatApiKey_Android }}
          project_folder: '.'
      #
      # This step might be obsolete at some point as .NET MAUI workloads
      # are starting to come pre-installed on the GH Actions build agents.
      - name: Install MAUI Workload
        run: dotnet workload install maui --ignore-failed-sources

      - name: Restore Dependencies
        run: dotnet restore ${{ inputs.project-file }}
      - name: Decode Keystore
        id: decode_keystore
        uses: timheuer/base64-to-file@v1
        with:
          fileDir: '${{ github.workspace }}/output'
          fileName: 'pub.keystore'
          encodedString: ${{ secrets.keystore }}

      - name: Version the app
        uses: managedcode/MAUIAppVersion@v1
        with:
          csproj: ${{ inputs.project-file }}
          version: ${{ github.run_number }}00
          displayVersion: ${{ inputs.build-version }}.${{ github.run_number }} ${{ inputs.generation }}
          printFile: true # optional
      - name: Setup Keystore File
        run: |
          echo "${{ secrets.keystore }}" > myapp.keystore.asc
          gpg -d --passphrase "${{ secrets.keystore-password }}" --batch myapp.keystore.asc > ${{ github.workspace }}/output/myapp.keystore

      - name: Generate Android AAB
        run: dotnet publish ${{inputs.project-file}} -c ${{ inputs.build-config }} -f ${{ inputs.dotnet-version-target }}-android /p:AndroidPackageFormats=aab /p:AndroidKeyStore=true /p:AndroidSigningKeyStore=${{ github.workspace }}/output/myapp.keystore /p:AndroidSigningKeyAlias=${{secrets.keystore-alias}} /p:AndroidSigningKeyPass="${{ secrets.keystore-password }}" /p:AndroidSigningStorePass="${{ secrets.keystore-password }}" --no-restore
      - name: List Bundles
        run: ls ${{ github.workspace }}/${{ inputs.project-folder }}/bin/${{ inputs.build-config }}/${{ inputs.dotnet-version-target }}-android/
      - uses: r0adkll/upload-google-play@v1.1.3
        name: Upload Android Artifact to Play Console internal
        if: ${{contains(inputs.deploy-type, 'dev')}}
        with:
          serviceAccountJsonPlainText: ${{ secrets.playstore-service-account }}
          packageName: ${{ inputs.package-name }}
          releaseFiles: ${{ github.workspace }}/${{ inputs.project-folder }}/bin/${{ inputs.build-config }}/${{ inputs.dotnet-version-target }}-android/${{ inputs.package-name }}-Signed.aab
          track: internal
      - uses: r0adkll/upload-google-play@v1.1.3
        name: Upload Android Artifact to Play Console production
        if: ${{contains(inputs.deploy-type, 'prod')}}
        with:
          serviceAccountJsonPlainText: ${{ secrets.playstore-service-account }}
          packageName: ${{ inputs.package-name }}
          releaseFiles: ${{ github.workspace }}/${{ inputs.project-folder }}/bin/${{ inputs.build-config }}/${{ inputs.dotnet-version-target }}-android/${{ inputs.package-name }}-Signed.aab
          track: production
