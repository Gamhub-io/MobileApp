name: Dev Deployment Build

on:
  workflow_call:
    inputs:
      dotnet-version:
        required: true
        type: string
      dotnet-version-target:
        required: true
        type: string
      xcode-version:
        required: true
        type: string
      project-file:
        required: true
        type: string
      project-folder:
        required: true
        type: string
      build-config:
        required: true
        type: string
      build-version:
        required: true
        type: string
      package-name:
        required: true
        type: string
      deploy-type:
        required: true
        type: string
    secrets:
      p12-cert:
        required: true
      p12-cert-password:
        required: true
      appstore-issuer:
        required: true
      appstore-keyid:
        required: true
      appstore-private-key:
        required: true
      discord_client_id:
        required: true
      api_host:
        required: true
      monitoring_key:
        required: true
      firebase_api_key:
        required: true
      firebase_GCM_sender_ID:
        required: true
      firebase_plist_version:
        required: true
      firebase_project_id:
        required: true
      firebase_storage_bucket:
        required: true
      google_app_id:
        required: true
jobs:
  publish-ios:
    runs-on: macos-15
    name: iOS Publish

    steps:
      # Setup
      - uses: maxim-lobanov/setup-xcode@v1.5.1
        name: Set XCode version
        with:
          xcode-version: ${{ inputs.xcode-version }}

      - name: Setup .NET ${{ inputs.dotnet-version }}
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ inputs.dotnet-version }}

      - uses: actions/checkout@v3
        name: Checkout the code

      # - uses: futureware-tech/simulator-action@v4
      #   name: setup simulator
      #   id: simulator
      #   with:
      #     model: 'iPhone 16'
      #     os_version: 18.2

      # Build Environement variables
      - name: Environement variables
        run: |
          chmod +x ./App/builds/ios_prebuild.sh
          ./App/builds/ios_prebuild.sh
        shell: bash
        env:
          discord_client_id: ${{ secrets.discord_client_id }}
          api_host: ${{ secrets.api_host }}
          monitoring_key: ${{ secrets.monitoring_key }}
          firebase_api_key: ${{ secrets.firebase_api_key }}
          firebase_GCM_sender_ID: ${{ secrets.firebase_GCM_sender_ID }}
          firebase_plist_version: ${{ secrets.firebase_plist_version }}
          firebase_storage_bucket: ${{ secrets.firebase_storage_bucket }}
          firebase_project_id: ${{ secrets.firebase_project_id }}
          google_app_id: ${{ secrets.google_app_id }}
          project_folder: '.'

      - name: Install MAUI Workload
        run: |
          dotnet workload install maui --ignore-failed-sources
          dotnet workload install ios

      - name: Restore Dependencies
        run: dotnet restore ${{ inputs.project-file }}

      # Signing
      - uses: apple-actions/import-codesign-certs@v2
        with:
          p12-file-base64: ${{ secrets.p12-cert }}
          p12-password: ${{ secrets.p12-cert-password }}

      - name: Download Provisioning Profiles
        id: provisioning
        uses: apple-actions/download-provisioning-profiles@v1
        with:
          bundle-id: ${{ inputs.package-name }}
          profile-type: 'IOS_APP_STORE'
          issuer-id: ${{ secrets.appstore-issuer }}
          api-key-id: ${{ secrets.appstore-keyid }}
          api-private-key: ${{ secrets.appstore-private-key }}

      # Version app
      - name: Version the app
        uses: managedcode/MAUIAppVersion@v1
        with:
          csproj: ${{ inputs.project-file }}
          version: ${{ github.run_number }} # to keep value unique
          displayVersion: ${{ inputs.build-version }}.${{ github.run_number }}
          printFile: true # optional
      # Compile the app
      - name: Compile the iOS app
        run: dotnet publish ${{inputs.project-file}} -c ${{ inputs.build-config }} -f:${{ inputs.dotnet-version-target }}-ios -p:RuntimeIdentifier=ios-arm64 /p:ArchiveOnBuild=true /p:EnableAssemblyILStripping=false
      - name: List packages
        run: ls ${{ github.workspace }}/${{ inputs.project-folder }}/bin/${{ inputs.build-config }}/${{ inputs.dotnet-version-target }}-ios/ios-arm64/publish/
      # Uploading to TestFlight
      - name: Upload app to TestFlight
        uses: apple-actions/upload-testflight-build@v1
        if: ${{contains(inputs.deploy-type, 'dev')}}
        with:
          app-path: ${{ github.workspace }}/${{ inputs.project-folder }}/bin/${{ inputs.build-config }}/${{ inputs.dotnet-version-target }}-ios/ios-arm64/publish/GamHubApp.ipa
          issuer-id: ${{ secrets.appstore-issuer }}
          api-key-id: ${{ secrets.appstore-keyid }}
          api-private-key: ${{ secrets.appstore-private-key }}
      - name: Upload app to TestFlight
        uses: apple-actions/upload-testflight-build@v1
        if: ${{contains(inputs.deploy-type, 'prod')}}
        with:
          app-path: ${{ github.workspace }}/${{ inputs.project-folder }}/bin/${{ inputs.build-config }}/${{ inputs.dotnet-version-target }}-ios/ios-arm64/publish/GamHubApp.ipa
          issuer-id: ${{ secrets.appstore-issuer }}
          api-key-id: ${{ secrets.appstore-keyid }}
          api-private-key: ${{ secrets.appstore-private-key }}
